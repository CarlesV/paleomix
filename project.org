* TODO Graceful shutdown on first ctrl-c, terminate on second.
* TODO Improved cleanup of child processes
Currently child processes of processes started by AtomicCmds may be left running.
Preferably we should be able to detect if any such processes are still left (via
/proc/*/stat), and kill these on forced termination.
* TODO Make CLI options available
Currently each possible CLI parameter or flag has to be included in the constructor, if they are to
be accessible to the pipeline script. A possible solution could be a CLIOptions object, which allows
the call to specify additional options, input files, output files and the like. This should be
handled by the AtomicCmd constructor.
* TODO Handle jars when checking for executables
Currently only the java excutable is checked when running commands involving java jars, preferably
it should be possible to check for their existence as well.
* TODO Generic handling of jars in AtomicCmd (subclass?)
* TODO Cleanup of ui, dynamically split out common subtrees
* DONE Dependency handling
Dependencies should be inferred using input / output files, allowing missing dependencies to be
assigned as needed. Preferably, only tasks like validations should be required to be explicitly
assigned as dependencies.
* DONE Fix termination of AtomicCmds when terminating subtasks
Currently running commands are not terminated, leading to the main thread hanging.
* DONE Capture stdout / stderr by default
If no pipes are specified for stdout and/or stderr, these should be piped to files in the temp
folder. Names should be generated using the executable from which these were directed. Name could
contain executable name, unique id and ".log".
